\pset format unaligned
\set ECHO none
SET client_min_messages TO WARNING;

-- set up variables for use in testing

\set cartodb_census_tract_geometry '0106000020E6100000010000000103000000010000001600000054EF703B347C52C053FF2092215B44400E8FC4CBD37B52C0B86C74CE4F5B4440C743DFDDCA7B52C05BDDB1D8265B44402A4A09C1AA7B52C06963EC84975A44403B873254C57B52C02CAC1BEF8E5A44401A9B1DA9BE7B52C03E6F2A52615A4440DAC2F352B17B52C06F3FE081015A444040446ADAC57B52C0EEDFBC38F159444033BC5983F77B52C01F5ED72FD8594440CE2D7425027C52C0A66DC328085A44400EECF82F107C52C0866D8B321B5A444098F221A81A7C52C0CFEFFB372F5A444049ED45B41D7C52C0775DBF60375A4440C458A65F227C52C0D70DDB16655A4440F82EA52E197C52C09AA73AE4665A4440DDE522BE137C52C00464AF777F5A44405498BED7107C52C04659BF99985A444011D90759167C52C09330D3F6AF5A444043679945287C52C01E680586AC5A4440FE59F3E32F7C52C0C9290131095B4440F76871C6307C52C09405137F145B444054EF703B347C52C053FF2092215B4440'

\set cartodb_county_geometry

-- OBS_GetBoundary tests

-- expect most recent census tract boundary at cartodb nyc
-- timespan implictly null
SELECT st_envelope(cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(),
  'us.census.tiger.census_tract'
)) = st_envelope(st_asewkb(:'cartodb_census_tract_geometry')) As OBS_GetBoundary_cartodb_census_tract;

-- expect most recent census county boundary (brooklyn) at cartodb nyc
-- timespan implictly null
SELECT st_envelope(cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(),
  'us.census.tiger.county'
)) = st_envelope(st_asewkb(:'cartodb_county_geometry')) As OBS_GetBoundary_cartodb_county;

-- expect null geometry since boundary_id is null
-- timespan implictly null
SELECT cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(),
  'us.census.tiger.non_existent'
) IS NULL As OBS_GetBoundary_non_existent_boundary_id;

-- expect null geometry since there are no census tracts at null island
-- timespan implictly null
SELECT cdb_observatory.OBS_GetBoundary(
  ST_SetSRID(ST_MakePoint(0, 0), 4326),
  'us.census.tiger.census_tract'
) IS NULL As OBS_GetBoundary_null_island_census_tract;

-- expect census tract boundary at cartodb nyc from 2014
SELECT st_envelope(cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(),
  'us.census.tiger.census_tract',
  '2015'
)) = st_envelope(st_asewkb(:'cartodb_census_tract_geometry')) As OBS_GetBoundary_year_census_tract;

-- should return null
-- look for census tracts a year before census released them
SELECT cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(),
  'us.census.tiger.census_tract',
  '1988'
) IS NULL As OBS_GetBoundary_unlisted_year;

-- OBS_GetBoundaryId tests

-- should give back '36047048500', the geoid of cartodb's census tract
SELECT cdb_observatory.OBS_GetBoundaryId(
  cdb_observatory._TestPoint(),
  'us.census.tiger.census_tract'
) = '36047048500'::text As OBS_GetBoundaryId_cartodb_census_tract;

-- should give back '36047048500', the geoid of cartodb's census tract
SELECT cdb_observatory.OBS_GetBoundaryId(
  cdb_observatory._TestPoint(),
  'us.census.tiger.census_tract',
  '2015'
) = '36047048500'::text As OBS_GetBoundaryId_cartodb_census_tract_with_year;

-- should give back '36047', the geoid of cartodb's county (King's/
--  Brooklyn, NY)
SELECT cdb_observatory.OBS_GetBoundaryId(
  cdb_observatory._TestPoint(),
  'us.census.tiger.county',
  '2015'
) = '36047'::text As OBS_GetBoundaryId_cartodb_county_with_year;

-- should give back null since there is not a census tract at null island
SELECT cdb_observatory.OBS_GetBoundaryId(
  ST_SetSRID(ST_MakePoint(0, 0), 4326),
  'us.census.tiger.census_tract'
) IS NULL As OBS_GetBoundaryId_null_island;

-- OBS_GetBoundaryById

-- should give geometry of King's County/Brooklyn, NY

SELECT st_envelope(cdb_observatory.OBS_GetBoundaryById(
  '36047',
  'us.census.tiger.county'
)) = st_envelope(st_asewkb(:'cartodb_county_geometry')) As OBS_GetBoundaryById_cartodb_county;

-- Should match output of GetBoundary on similar inputs
SELECT cdb_observatory.OBS_GetBoundaryById(
  '36047', -- cartodb's county
  'us.census.tiger.county'
) = cdb_observatory.OBS_GetBoundary(
  cdb_observatory._TestPoint(), -- CartoDB's office
  'us.census.tiger.county'
) As OBS_GetBoundaryById_compared_with_obs_GetBoundary;

-- should give null since boundary_id does not match geometry reference id
SELECT st_envelope(cdb_observatory.OBS_GetBoundaryById(
  '36047',
  'us.census.tiger.county',
  '2015'
)) = st_envelope(st_asewkb(:'cartodb_county_geometry')) OBS_GetBoundaryById_boundary_id_mismatch_geom_id;

-- should give null since boundary_id does not match geometry reference id
SELECT cdb_observatory.OBS_GetBoundaryById(
  '36047',
  'us.census.tiger.census_tract'
) IS NULL As OBS_GetBoundaryById_boundary_id_mismatch_geom_id;

-- _OBS_GetBoundariesByGeometry
-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047025700','36047028501','36047038900','36047039100','36047042300','36047042500','36047042700','36047044900','36047045300','36047048500','36047048900','36047049100','36047049300','36047050500','36047050700'] As _OBS_GetBoundariesByGeometry_tracts_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory._OBS_GetBoundariesByGeometry(
    -- near CartoDB's office
    ST_MakeEnvelope(-73.9452409744,40.6988851644,-73.9280319214,40.7101254524,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As _OBS_GetBoundariesByGeometry_tracts_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory._OBS_GetBoundariesByGeometry(
    -- around null island
    ST_MakeEnvelope(-0.1400756836,-0.2114863362,0.1455688477,0.2059932086,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- OBS_GetBoundariesByGeometry

-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047025700','36047028501','36047038900','36047039100','36047042300','36047042500','36047042700','36047044900','36047045300','36047048500','36047048900','36047049100','36047049300','36047050500','36047050700'] As OBS_GetBoundariesByGeometry_tracts_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByGeometry(
    -- near CartoDB's office
    ST_MakeEnvelope(-73.9452409744,40.6988851644,-73.9280319214,40.7101254524,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As OBS_GetBoundariesByGeometry_tracts_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByGeometry(
    -- around null island
    ST_MakeEnvelope(-0.1400756836,-0.2114863362,0.1455688477,0.2059932086,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- OBS_GetBoundariesByPointAndRadius

-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047038900','36047039100','36047042500','36047042700','36047045300','36047048500','36047048900','36047049100','36047049300'] As OBS_GetBoundariesByPointAndRadius_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByPointAndRadius(
    -- 500 meter circle centered on CartoDB's office
    cdb_observatory._testPoint(),
    500,
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As OBS_GetBoundariesByPointAndRadius_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByPointAndRadius(
    -- around null island
    ST_SetSRID(ST_Point(0, 0), 4326),
    500,
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- _OBS_GetPointsByGeometry

-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047025700','36047028501','36047038900','36047039100','36047042300','36047042500','36047042700','36047044900','36047045300','36047048500','36047048900','36047049100','36047049300','36047050500','36047050700'] As _OBS_GetPointsByGeometry_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory._OBS_GetPointsByGeometry(
    -- around CartoDB's Brooklyn office
    ST_MakeEnvelope(-73.9452409744,40.6988851644,
                    -73.9280319214,40.7101254524,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As _OBS_GetPointsByGeometry_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory._OBS_GetPointsByGeometry(
    -- around null island
    ST_MakeEnvelope(-0.1400756836,-0.2114863362,
                     0.1455688477, 0.2059932086,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);


-- OBS_GetPointsByGeometry

-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047025700','36047028501','36047038900','36047039100','36047042300','36047042500','36047042700','36047044900','36047045300','36047048500','36047048900','36047049100','36047049300','36047050500','36047050700'] As OBS_GetPointsByGeometry_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByGeometry(
    -- around CartoDB's Brooklyn office
    ST_MakeEnvelope(-73.9452409744,40.6988851644,
                    -73.9280319214,40.7101254524,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

SELECT
  array_agg(geom_refs) = Array['36047025700','36047028501','36047038900','36047039100','36047042300','36047042500','36047042700','36047044900','36047045300','36047048500','36047048900','36047049100','36047049300','36047050500','36047050700'] As OBS_GetPointsByGeometry_around_cartodb_2014
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByGeometry(
    -- around CartoDB's Brooklyn office
    ST_MakeEnvelope(-73.9452409744,40.6988851644,
                    -73.9280319214,40.7101254524,
                    4326),
    'us.census.tiger.census_tract',
    '2015')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As OBS_GetPointsByGeometry_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetBoundariesByGeometry(
    -- around null island
    ST_MakeEnvelope(-0.1400756836,-0.2114863362,
                     0.1455688477, 0.2059932086,
                    4326),
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- OBS_GetPointsByPointAndRadius

-- check that all census tracts intersecting with the geometry are returned
-- order them to ensure that the same values are returned
SELECT
  array_agg(geom_refs) = Array['36047038900','36047039100','36047042500','36047042700','36047045300','36047048500','36047048900','36047049100','36047049300'] As OBS_GetPointsByPointAndRadius_around_cartodb
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetPointsByPointAndRadius(
    -- around CartoDB's Brooklyn office
    cdb_observatory._testpoint(),
    500,
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

SELECT
  array_agg(geom_refs) = Array['36047038900','36047039100','36047042500','36047042700','36047045300','36047048500','36047048900','36047049100','36047049300'] As OBS_GetPointsByPointAndRadius_around_cartodb_2014
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetPointsByPointAndRadius(
    -- around CartoDB's Brooklyn office
    cdb_observatory._testpoint(),
    500,
    'us.census.tiger.census_tract',
    '2015')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

-- Null Island area
SELECT
  array_length(array_agg(geom_refs), 1) IS NULL As OBS_GetPointsByPointAndRadius_around_null_island
FROM (
  SELECT *
  FROM cdb_observatory.OBS_GetPointsByPointAndRadius(
    -- around null island
    ST_SetSRID(ST_Point(0, 0), 4326),
    500,
    'us.census.tiger.census_tract')
  ORDER BY geom_refs ASC
) As m(the_geom, geom_refs);

\i test/fixtures/drop_fixtures.sql
